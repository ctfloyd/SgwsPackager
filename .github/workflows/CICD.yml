name: CI/CD
on:
  push:
    branches:
      - '*'
      - '*/'
      - '**'
      - '!main'
    paths-ignore:
      - '**.md'
      - '.idea'
      - '.gitignore'
      - '.github/**'
      - '!.github/workflows/CICD.yml'
  pull_request:
    paths-ignore:
      - '**.md'
      - '.idea'
      - '.gitignore'
      - '.github/**'
      - '!.github/workflows/CICD.yml'

defaults:
  run:
    shell: 'bash'

jobs:
  draft_release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Get version from current date
        id: version
        run: echo ::set-output name=current-version::"$(node -e "try{console.log(require('./electron-builder.config.js').extraMetadata.version)}catch(e){console.error(e);process.exit(1)}")"
      
      - name: Get branch
        id: get-branch
        run: echo ::set-output name=branch::${GITHUB_REF#refs/*/}

      - name: Concat Final Version
        id: final-version
        run: echo ::set-output name=version::${{steps.get-branch.outputs.branch}}-v${{steps.version.outputs.current-version}}

      - name: Delete outdated drafts
        uses: hugo19941994/delete-draft-releases@v0.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release Draft
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          draft: true
          tag_name: ${{ steps.final-version.outputs.version }}
          release_name: ${{ steps.final-version.outputs.version }}
          body: Release

  compile:
    needs: [ draft_release ]

    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14

      # TODO: Install not all dependencies, but only those required for this job
      - run: npm ci

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          build_script_name: build
          args: --config electron-builder.config.js

          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: true

          # Sometimes the build may fail due to a connection problem with Apple, GitHub, etc. servers.
          # This option will restart the build as many attempts as possible
          max_attempts: 3
